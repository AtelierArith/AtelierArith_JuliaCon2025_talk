---
title: Let's read Julia documentation in your preferred language
author: SatoshiTerasaki@AtelierArith
format:
  revealjs:
    theme: "black"
    css: "../styles/style.css"
    embed-resources: true
    slide-number: true
    show-notes: separate-page
    mermaid:
      theme: default
    gfm:
    mermaid-format: png
---

# 概要

- DocstringTranslation.jl の紹介
- Julia ドキュメントの多言語翻訳
- デモを実行

---

## 背景・課題

- Julia の公式ドキュメントは **英語** で書かれている
- 非英語圏の開発者にとって心理的・時間的コストが高い
- 最新情報は英語でしか提供されない

**解決策**: 機械翻訳を活用した自動翻訳システム

---

## DocstringTranslation.jl

Julia の docstring を好きな言語に翻訳するパッケージ

```julia
julia> using DocstringTranslation; @switchlang! :Japanese
julia> @doc exp
  exp(x)

  xの自然基底指数を計算します。言い換えれば、ℯ^xです。

  例
  ≡≡

  julia> exp(1.0)
  2.718281828459045
```

ChatGPT API (`gpt-4o-mini`) を使用

---

## 翻訳の仕組み

`Docs.parsedoc(d::DocStr)` メソッドをハック

```julia
@eval function Docs.parsedoc(d::DocStr)
    if d.object === nothing
        md = Docs.formatdoc(d)
        md.meta[:module] = d.data[:module]
        md.meta[:path] = d.data[:path]
        d.object = md
    end
    # d.object # <-- 元の実装
    translate_with_openai(d.object) # <-- ハック実装
end
```

---

## Markdown 翻訳の課題

- マークダウン構造の破損リスク
- `[xxx](@ref yyy)` などの Documenter 構文の保護が必要
- コードブロックは翻訳すべきでない

**解決策**: `Markdown.parse` 結果を利用した構造保護

---

## 構造保護の実装

1. `Markdown.Link` などを一意IDに置換
2. 翻訳実行
3. IDを元の構造に復元

```julia
# 翻訳前: See [Julia docs](https://docs.julialang.org/en/v1/)
# 置換後: See `asfa93r_bfeafasf`
# 翻訳後: 詳しくは `asfa93r_bfeafasf` を見てください
# 復元後: 詳しくは [Julia docs](https://docs.julialang.org/en/v1/) を見てください
```

---

## 成果物

**多言語 Julia ドキュメント**:
- [日本語](https://atelierarith.github.io/UnofficialJuliaDoc-ja/)
- [韓国語](https://atelierarith.github.io/UnofficialJuliaDoc-ko/)
- [中国語](https://atelierarith.github.io/UnofficialJuliaDoc-zh/)
- [ドイツ語](https://atelierarith.github.io/UnofficialJuliaDoc-de/)
- [フランス語](https://atelierarith.github.io/UnofficialJuliaDoc-fr/)
- [スペイン語](https://atelierarith.github.io/UnofficialJuliaDoc-es/)

**関連パッケージ**:
- DocstringTranslationOllamaBackend.jl (Ollama対応)
- DocstringTranslationGoogleTransBackend.jl (Google翻訳対応)

---

## デモ

実際に翻訳機能を動かしてみましょう！

---

## まとめ

- Julia ドキュメントの多言語化を実現
- docstring と Documenter.jl の両方に対応
- 翻訳結果のキャッシュ機能で効率化
- 複数の翻訳バックエンドをサポート

**今後の展望**:
- 翻訳品質の向上
- より多くの言語への対応
- コミュニティでの翻訳結果共有

---

## ありがとうございました

**リポジトリ**:
- [DocstringTranslation.jl](https://github.com/AtelierArith/DocstringTranslation.jl)
- [DocumenterTranslationOpenAIBackend.jl](https://github.com/AtelierArith/DocumenterTranslationOpenAIBackend.jl)

**質問・ディスカッション歓迎！**